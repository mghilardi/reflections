To do that, you’ll need to install Git. If you already have Git installed, check its version using the command git --version.
https://www.udacity.com/wiki/ud775/install-git
https://www.udacity.com/wiki/ud775/install-git/install-git-windows
############################################################################################
Quiz: Cloning And Exploring The Repo
Cloning a Repository
To clone a repository, run git clone followed by a space and the repository URL.

Asteroids URL
Use the following url to clone the Asteroids repository: https://github.com/udacity/asteroids.git

Exiting git log
To stop viewing git log output, press q (which stands for quit).

Getting Colored Output
To get colored diff output, run git config --global color.ui auto

Copying and Pasting from the Command Line
To complete this quiz, you'll want to copy and paste some commit ids.

Windows
To copy and paste within Git Bash, follow the instructions on this page.

Mac
To copy and paste within the terminal on Mac, use Cmd+C and Cmd+V

Ubuntu
To copy and paste within the terminal on Ubuntu, use Ctrl+Shift+C and Ctrl+Shift+V.

Using git log and git diff
As a reminder, running git log will show a list of the recent commits with information about them, including commit IDs. Running git diff followed by two commit IDs will compare the two versions of the code in those commits. If you need a refresher, you may want to rewatch this video.

Entering commit IDs
If it is easier, you may enter the first four or more characters of the commit ID rather than pasting the entire ID.

############################################################################################
Quiz: Checking Out Old Versions Of Code
You can download the troubleshooting_guide.pdf here.

QuickEdit Mode
To make copying and pasting in GitBash easier by turning on QuickEdit mode, follow the instructions here.

Most Recent Commit
The commit ID of the most recent commit is 3884eab839af1e82c44267484cf2945a766081f3. You can use this commit ID to return to the latest commit after checking out an older commit.

Format of git checkout
The command Caroline types to checkout the "Revert controls" commit is git checkout b0678b161fcf74467ed3a63110557e3d6229cfa6.

Windows Explorer
When Caroline mentions opening a "file navigation GUI" on Windows, she is referring to the Windows Explorer.

Entering commit IDs
If it is easier, you may enter the first four or more characters of the commit ID rather than pasting the entire ID.

Most Recent Commit
The commit ID of the most recent commit is 3884eab839af1e82c44267484cf2945a766081f3. You can use this commit ID to return to the latest commit after checking out an older commit.

############################################################################################
VIM 

Press i or a to get into Insert mode, type message of choice
press several times ESC to get out of Insert-Mode, or any other mode you might have ran into by accident
to save, :wq, :x or ZZ
to exit without saving, :q! or ZQ
EDIT:
To reload a file and undo all changes you have made...
Press several times ESC and then enter :e!.

############################################################################################
Setting Up Your Workspace On Windows
You can download .bash_profile_course here.

Changing background color
If you prefer the background color of Git Bash to be something other than black, you can change it in the "Defaults" menu under the "Colors" tab. If you like the background color as-is, you don't need to make any changes.

Downloading necessary files
Save this file in your home directory with the name git-completion.bash.
Save this file in your home directory with the name git-prompt.sh.
Download bash_profile_course from the Downloadables section.
If you already have a file in your home directory named .bash_profile, copy the content from bash_profile_course and paste it at the bottom of .bash_profile. Otherwise, move bash_profile_course to your home directory and rename it to .bash_profile. (If you're curious to learn more about how bash prompts work, see this page.)
Making Git configurations
Run the following Git configuration commands. The first one will need to be modified if you are using a text editor other than Sublime, or if Sublime is installed in another location for you. See this page for the correct command for a couple of other popular text editors. For any other editor, you'll need to enter the command you use to launch that editor from Git Bash.

git config --global core.editor "'C:/Program Files/Notepad++/notepad++.exe' -n -w"
git config --global push.default upstream
git config --global merge.conflictstyle diff3
Make sure you can start your editor from Git Bash
If you use Sublime, you can do this by adding the following line to your .bash_profile:
alias note="C:/Program\ Files/Notepad++/notepad++.exe"
alias subl="C:/Program\ Files/Sublime\ Text\ 2/sublime_text.exe"
Restart Git Bash
You'll need to close and re-open Git Bash before all your changes take effect.
